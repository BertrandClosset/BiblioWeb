<?php

namespace BibliothequeUniversitaire\EntiteBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * LecteurRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LecteurRepository extends EntityRepository
{
    public function findAll()
    {
        return $this->findBy(array(), array('nom' => 'ASC', 'prenom' => 'ASC'));
    }

    /**
     * Fonction de recherche par nom
     * @param $data données du formulaire de recherche
     * @return array recherches trouvées
     */
    public function searchLecteurs($data)
    {
        $DQL = "SELECT l
                FROM BibliothequeUniversitaireEntiteBundle:Lecteur l
                WHERE l.nom LIKE :nom
                ORDER BY l.nom";

        $query = $this->getEntityManager()
            ->createQuery($DQL);

        $query->setParameter('nom', '%' . $data['nom'] . '%');

        return $query->getResult();
    }

    /**
     * Fonction qui définie si un Lecteur peut encore emprunter
     * @param Lecteur $lecteur
     * @return boolean
     */
    public function limiteEmprunter(Lecteur $lecteur)
    {
        $nombreDefini = $lecteur->getCycleChoisi()->getNombreLivres();

        $query = $this->getEntityManager()->createQuery("SELECT COUNT(ex)
                                                         FROM BibliothequeUniversitaireEntiteBundle:Emprunt em
                                                         LEFT JOIN em.exemplaire_emprunte ex
                                                         WHERE em.lecteur_emprunteur = :lecteur_id");
        $query->setParameter(':lecteur_id', $lecteur->getId());

        $result = $query->getSingleScalarResult();

        if ($result >= $nombreDefini)
        {
            return true;
        } else {
            return false;
        }

    }
}
